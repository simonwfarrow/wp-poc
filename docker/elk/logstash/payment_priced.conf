input {
  elasticsearch {
    hosts => "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
    index => "businessevents*"
    schedule => "* * * * *"
    docinfo => true
    query => '{"query":{"bool":{"must":[{"term":{"category":{"value":"event"}}},{"term":{"name":{"value":"payment_cleared"}}}],"must_not":[{"term":{"status":{"value":"priced"}}}]}}}'
  }
}
filter {
  elasticsearch {
    hosts => "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
    index => "businessevents*"
    query_template => "/usr/share/logstash/pipeline/find_payment_charge_calculated.json"
    add_tag => ["matched"]
  }
}
filter {
  if "matched" in [tags] {
    mutate {
      replace => {"status" => "priced"}
      remove_tag => ["matched"]
      replace => {"aged" => "false"}
    }
  } else {
    ruby {
      init => "require 'time'"
      code => "age = Time.now - Time.strptime(event.get('occurred_at'),'%Y-%m-%dT%H:%M:%S.%L%z');
               event.set('age',age);
               if age > 300
                 event.set('aged',true);
               end"
    }
  }
}
output {
  if [status] == "priced" or [aged] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
      index => "%{[@metadata][_index]}"
      action => "update"
      document_id => "%{[@metadata][_id]}"
      manage_template => false
    }
  }
}